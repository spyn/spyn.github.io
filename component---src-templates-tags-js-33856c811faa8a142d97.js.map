{"version":3,"sources":["webpack://flexible-gatsby/./src/templates/tags.js"],"names":["pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","className","map","node","frontmatter","title","date","slug","fields","key","Link","to"],"mappings":"gKAoCA,UAhCa,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAGf,OACE,gBAAC,IAAD,KACE,uBAAKK,UAAU,wBACb,uBAAKA,UAAU,aACb,0BAAKD,GACL,sBAAIC,UAAU,YACXH,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,EAAwBA,EAAKC,YAArBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACPC,EAASJ,EAAKK,OAAdD,KACR,OACE,sBAAIE,IAAKF,GACP,gBAAC,EAAAG,KAAD,CAAMC,GAAIJ,GAAOF,GACjB,mCAAWC,QAKnB,4BACE,gBAAC,EAAAI,KAAD,CAAMC,GAAG,SAAT","file":"component---src-templates-tags-js-33856c811faa8a142d97.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? '' : 's'\r\n  } tagged with \"${tag}\"`\r\n  return (\r\n    <Layout>\r\n      <div className=\"content-box clearfix\">\r\n        <div className=\"blog-tags\">\r\n          <h1>{tagHeader}</h1>\r\n          <ul className=\"tag-list\">\r\n            {edges.map(({ node }) => {\r\n              const { title, date } = node.frontmatter\r\n              const { slug } = node.fields\r\n              return (\r\n                <li key={slug}>\r\n                  <Link to={slug}>{title}</Link>\r\n                  <small> | {date}</small>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n          <span>\r\n            <Link to=\"/tags\">‚Üê All tags</Link>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}